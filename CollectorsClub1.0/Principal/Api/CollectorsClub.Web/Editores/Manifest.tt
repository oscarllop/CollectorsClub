<#@ template language="C#" debug="true" hostspecific="true"#>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ include file="..\\..\\CollectorsClub.Model\\Templates\\Context.Base.ttinclude"#>
<#@ output extension=".dnn"#><#

const string _inputFile = @"..\..\CollectorsClub.EntityFramework\Model.edmx";
string _aplicacion = "CollectorsClub";
Dictionary<string, MetadataGenerador.MetadataEntidad> _metadataEntidades = MetadataGenerador.ObtenerEntidades(_aplicacion);
var _storeMetadata = LoadMetadata(_inputFile);
var _textTransform = DynamicTextTransformation.Create(this);
var _code = new CodeGenerationTools(this);
var _ef = new MetadataTools(this);
//var _itemCollection = new EdmMetadataLoader(_textTransform.Host, _textTransform.Errors).CreateEdmItemCollection(_inputFile);
var _itemCollection = _storeMetadata.EdmItems;
EntityContainer _container = _itemCollection.OfType<EntityContainer>().FirstOrDefault();
var _typeMapper = new TypeMapper(_code, _ef, _container, _storeMetadata, _textTransform.Errors);
var	_fileManager = EntityFrameworkTemplateFileManager.Create(this);
var _codeStringGenerator = new CodeStringGenerator(_code, _typeMapper, _ef);
var _codeJSGenerator = new CodeJSGenerator(_code, _typeMapper, _ef);

if (!_typeMapper.VerifyCaseInsensitiveTypeUniqueness(_typeMapper.GetAllGlobalItems(_itemCollection), _inputFile)) {
	return string.Empty;
}

MetadataGenerador.IncluirEntidadesNoExistentesEnFramework(_metadataEntidades, _typeMapper.GetItemsToGenerate<EntityType>(_itemCollection).ToList(), _typeMapper);
foreach (var _entity in _typeMapper.GetItemsToGenerate<EntityType>(_itemCollection)) {
  _fileManager.StartNewFile(_entity.Name + "EditorViewManifest.dnn"); 
  IEnumerable<EdmProperty> _propertiesWithDefaultValues = _typeMapper.GetPropertiesWithDefaultValues(_entity);
  IEnumerable<NavigationProperty> _collectionNavigationProperties = _typeMapper.GetCollectionNavigationProperties(_entity);
  IEnumerable<NavigationProperty> _navigationProperties = _typeMapper.GetNavigationProperties(_entity);
  IEnumerable<EdmProperty> _complexProperties = _typeMapper.GetComplexProperties(_entity);
  IEnumerable<EdmProperty> _simpleProperties = _typeMapper.GetSimpleProperties(_entity);
  IEnumerable<EdmMember> _properties = _typeMapper.GetProperties(_entity);
  	EntitySet _entitySet = (EntitySet) _container.BaseEntitySets.Where(es => es.ElementType.Name == _entity.Name).FirstOrDefault(); 
	//string _nombreEntidad = _code.Escape(_entity);
	string _nombreEntidad = _code.Escape(_entitySet); #>
<dotnetnuke version="3.0" type="Module">
  <folders>
    <folder>
      <name>CollectorsClub.Editor<#= _nombreEntidad #></name>
      <friendlyname>CollectorsClub - Mantenimiento <#= _nombreEntidad #></friendlyname>
      <modulename>CollectorsClub.Editor<#= _nombreEntidad #></modulename>
      <description>CollectorsClub - Mantenimiento <#= _nombreEntidad #></description>
      <version>01.00.00</version>
      <modules>
        <module>
          <friendlyname>CollectorsClub - Mantenimiento <#= _nombreEntidad #></friendlyname>
          <cachetime>0</cachetime>
          <controls>
            <control>
              <src>DesktopModules/CollectorsClub/Editores/<#=_code.Escape(_entity)#>EditorView.ascx</src>
              <type>View</type>
              <helpurl></helpurl>
            </control>
          </controls>
        </module>
      </modules>
      <files>
        <file>
          <name><#=_code.Escape(_entity)#>EditorView.ascx</name>
        </file>
      </files>
    </folder>
  </folders>
</dotnetnuke>
<#
}
_fileManager.Process();
#>